// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestJ.Context;

#nullable disable

namespace TestJ.Migrations
{
    [DbContext(typeof(EFMSSQLDBContext))]
    [Migration("20230118142852_MigrationV1")]
    partial class MigrationV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestJ.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1980, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fio = "Tom",
                            RegDate = new DateTime(2020, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1983, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fio = "Alice",
                            RegDate = new DateTime(2019, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1975, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fio = "Sam",
                            RegDate = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TestJ.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Art")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Art = "112",
                            Category = "Fruit",
                            Name = "Orange",
                            Price = 12.60m
                        },
                        new
                        {
                            Id = 12,
                            Art = "113",
                            Category = "Meal",
                            Name = "Egg",
                            Price = 6.70m
                        },
                        new
                        {
                            Id = 13,
                            Art = "114",
                            Category = "Fruit",
                            Name = "Banana",
                            Price = 8m
                        });
                });

            modelBuilder.Entity("TestJ.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Nmr")
                        .HasColumnType("int");

                    b.Property<decimal>("SaleAmount")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Sale");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            ClientId = 1,
                            Nmr = 3331,
                            SaleAmount = 133.90m,
                            SaleDate = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            ClientId = 1,
                            Nmr = 3332,
                            SaleAmount = 78.00m,
                            SaleDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            ClientId = 2,
                            Nmr = 3333,
                            SaleAmount = 242.60m,
                            SaleDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            ClientId = 3,
                            Nmr = 3334,
                            SaleAmount = 440m,
                            SaleDate = new DateTime(2023, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TestJ.Models.SaleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleItem");

                    b.HasData(
                        new
                        {
                            Id = 311,
                            Count = 5,
                            ProductId = 11,
                            SaleId = 31
                        },
                        new
                        {
                            Id = 312,
                            Count = 7,
                            ProductId = 12,
                            SaleId = 31
                        },
                        new
                        {
                            Id = 313,
                            Count = 3,
                            ProductId = 13,
                            SaleId = 31
                        },
                        new
                        {
                            Id = 321,
                            Count = 3,
                            ProductId = 11,
                            SaleId = 32
                        },
                        new
                        {
                            Id = 322,
                            Count = 6,
                            ProductId = 12,
                            SaleId = 32
                        },
                        new
                        {
                            Id = 331,
                            Count = 11,
                            ProductId = 11,
                            SaleId = 33
                        },
                        new
                        {
                            Id = 332,
                            Count = 13,
                            ProductId = 13,
                            SaleId = 33
                        },
                        new
                        {
                            Id = 341,
                            Count = 55,
                            ProductId = 13,
                            SaleId = 34
                        });
                });

            modelBuilder.Entity("TestJ.Models.Sale", b =>
                {
                    b.HasOne("TestJ.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TestJ.Models.SaleItem", b =>
                {
                    b.HasOne("TestJ.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestJ.Models.Sale", "Sale")
                        .WithMany()
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });
#pragma warning restore 612, 618
        }
    }
}
